{"version":3,"sources":["Note.js","color.js","Notes.js","App.js","serviceWorker.js","index.js"],"names":["Note","props","title","JSON","parse","stringify","text","color","id","state","active","changeOrder","bind","click","delete","handleChange","handleSubmit","onDragstart","onDragStart","setActivity","this","setState","e","order","parseInt","target","getAttribute","stopPropagation","obj","field","name","value","type","newstate","trim","length","setCustomValidity","preventDefault","note","onSubmit","dataTransfer","setData","element","push","onChange","rows","cols","style","onClick","className","colors","c","checked","key","backgroundColor","Fragment","draggable","top","left","React","Component","Notes","clonedColors","loadNotes","localStorage","getItem","setItem","parseNotes","add","call","dragOver","onDrop","Storage","prototype","getObj","setObj","n","time","i","isNaN","j","splice","newNote","notes","clonedNotes","callBack","getData","clientY","window","innerHeight","clientX","innerWidth","direction","confirm","removeItem","renderNotes","Math","random","onDragOver","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e329bf97.chunk.js","sourcesContent":["import React from 'react';\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let title = JSON.parse(JSON.stringify(this.props.title)),\n        text = JSON.parse(JSON.stringify(this.props.text)),\n        color = JSON.parse(JSON.stringify(this.props.color)),\n        id = JSON.parse(JSON.stringify(this.props.id));\n\n    this.state = {\n      active: false,\n      id: id,\n      title: title,\n      text: text,\n      color: color\n    }\n\n    this.changeOrder = this.changeOrder.bind(this);\n    this.click = this.click.bind(this);\n    this.delete = this.delete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDragstart = this.onDragStart.bind(this);\n    this.setActivity = this.setActivity.bind(this);\n  }\n\n  click() {\n    //this.props.call(this.props.id, this.setActivity);\n    this.setState({active:true});\n  }\n\n  changeOrder(e) {\n    this.props.order(parseInt(e.target.getAttribute('value')), this.props.id);\n  }\n\n  setActivity() {\n    if (this.state.active === false) {\n      this.setState({active:true});\n    } else {\n      this.setState({active:false});\n    }\n  }\n\n  delete(e) {\n    e.stopPropagation();\n    this.props.delete(this.props.id);\n  }\n\n  handleChange(e) {\n    let obj = e.target;\n    let field = obj.name;\n    let value = obj.value;\n    let type = obj.type;\n    let newstate = {};\n\n    if (type === 'radio') {\n      newstate[\"color\"] = value;\n      this.setState(newstate);\n      return;\n    }\n\n    if (type === 'text' || obj.id === \"text\") {\n      if (value.trim().length < 2) {\n        obj.setCustomValidity(\"Too short, at least two characters are required\");\n      } else {\n        obj.setCustomValidity(\"\");\n      }\n      newstate[field] = value;\n      this.setState(newstate);\n      return;\n    }\n\n    this.setState(newstate);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let note = JSON.parse(JSON.stringify({title: this.state.title, id: this.state.id, text: this.state.text, color: this.state.color}));\n    this.props.onSubmit(note);\n  }\n\n  onDragStart(e) {\n    e.dataTransfer.setData(\"text/plain\", e.target.getAttribute(\"id\"));\n  }\n\n  render() {\n    let element = [];\n    let color = [];\n\n    if (this.state.active) {\n      element.push(<input type=\"text\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.handleChange}/>);\n      element.push(<textarea rows=\"10\" cols=\"20\" id=\"text\" name=\"text\" value={this.state.text} onChange={this.handleChange} />);\n      if (this.props.color === \"#FF0000\") {\n        element.push(<div id=\"delete\" style={{color: \"black\"}} onClick={e => this.delete(e)}>X</div>);\n      } else {\n        element.push(<div id=\"delete\" style={{color: \"red\"}} onClick={e => this.delete(e)}>X</div>);\n      }\n      element.push(<button className=\"Save\">Save</button>);\n      for (let c of this.props.colors) {\n        let checked = false;\n        if (this.state.color === c.color) {\n          checked = true;\n        }\n\n        color.push(<td key={c.color} style={{backgroundColor: c.color}}>\n         <input type=\"radio\" name=\"color\" id={c.color} checked={checked} value={c.color} onChange={this.handleChange} /></td>);\n      }\n\n\n    } else {\n      element.push(<React.Fragment>{this.props.title}</React.Fragment>);\n      element.push(<React.Fragment>{this.props.text}</React.Fragment>);\n      element.push(<div id=\"arrowUp\" onClick={e => this.changeOrder(e)} value=\"1\">Up</div>);\n      element.push(<div id=\"arrowDown\"onClick={e => this.changeOrder(e)} value=\"0\">Down</div>);\n    }\n\n\n\n    return (\n      <div id={this.props.id} draggable=\"true\" className=\"Note\" style={{backgroundColor: this.props.color, top: this.props.top, left: this.props.left, order: this.props.id}}\n       onDragStart={this.onDragStart} onClick={this.click}>\n      <form className=\"Edit\" onSubmit={this.handleSubmit}>\n      {element[2]} {element[4]} {element[5]}\n      <div className=\"Title\">{element[0]}</div><div className=\"Text\">{element[1]}</div>\n      <table id=\"colors\"><tbody><tr>{color}</tr></tbody></table>\n      {element[3]}\n      </form></div>);\n  }\n\n}\n\nexport default Note;\n","export var colors = [\n  {\n    \"color\": \"#9400D3\"\n  },\n  {\n    \"color\": \"#4B0082\"\n  },\n  {\n    \"color\": \"#0000FF\"\n  },\n  {\n    \"color\": \"#00FF00\"\n  },\n  {\n    \"color\": \"#FFFF00\"\n  },\n  {\n    \"color\": \"#FF7F00\"\n  },\n  {\n    \"color\": \"#FF0000\"\n  },\n  {\n    \"color\": \"#63EBC4\"\n  },\n  {\n    \"color\": \"pink\"\n  },\n  {\n    \"color\": \"#A9A9A9\"\n  },\n  {\n    \"color\": \"#D3D3D3\"\n  },\n  {\n    \"color\": \"#778899\"\n  },\n  {\n    \"color\": \"#2F4F4F\"\n  },\n]\n","import React from 'react';\nimport Note from './Note.js';\nimport {colors} from './color.js';\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let clonedColors = JSON.parse(JSON.stringify(colors));\n    let loadNotes = [];\n\n    if (localStorage.getItem(\"init\")) {\n      let obj = JSON.parse(localStorage.getItem(\"init\"));\n      if (obj) {\n      }\n    } else {\n       localStorage.setItem(\"init\", true);\n       loadNotes = [\n       {\n         \"id\": 1,\n         \"title\": \"Groceries\",\n         \"text\": \"Buy Case of Nuka Cola, Nachos, Milk, Coffee, Candy and Gouda Cheese.\",\n         \"left\": \"20%\",\n         \"top\": \"20%\",\n         \"color\": \"green\",\n         \"time\": null\n       },\n       {\n         \"id\": 2,\n         \"title\": \"Lunch Meeting at Harald\",\n         \"text\": \"Tomorrow, at 12 o'clock sharp.\",\n         \"left\": \"50%\",\n         \"top\": \"10%\",\n         \"color\": \"pink\",\n         \"time\": null\n       },\n       {\n         \"id\": 3,\n         \"title\": \"ToDo for Notes Web-App:\",\n         \"text\": \"Timestamps. Future Dream: Database API\",\n         \"left\": \"50%\",\n         \"top\": \"50%\",\n         \"color\": \"#63ebc4\",\n         \"time\": null\n        }]\n   }\n\n    loadNotes = this.localStorage(loadNotes);\n        //localStorage.clear();\n\n     this.state = {\n       \"notes\": loadNotes,\n       \"colors\": clonedColors,\n       \"active\": 0\n     }\n\n     this.parseNotes = this.parseNotes.bind(this);\n     this.add = this.add.bind(this);\n     this.call = this.call.bind(this);\n     this.dragOver = this.dragOver.bind(this);\n     this.localStorage = this.localStorage.bind(this);\n     this.onDrop = this.onDrop.bind(this);\n     this.onSubmit = this.onSubmit.bind(this);\n     this.order = this.order.bind(this);\n     this.delete = this.delete.bind(this);\n  }\n\n  componentDidUpdate() {\n    //fetch('https://api.github.com/users/TemeK1')\n    //.then(response => response.json())\n    //.then(data => console.log(data));\n  }\n\n  localStorage(loadNotes) {\n    Storage.prototype.getObj = function(key) {\n      return JSON.parse(this.getItem(key));\n    }\n\n    Storage.prototype.setObj = function(key, obj) {\n      return this.setItem(key,(obj));\n    }\n\n    if (loadNotes) {\n      for (let n of loadNotes) {\n        localStorage.setObj(n.id, JSON.stringify({\n          \"id\": n.id,\n          \"title\": n.title,\n          \"text\": n.text,\n          \"left\": n.left,\n          \"top\": n.top,\n          \"color\": n.color,\n          \"time\": n.time}));\n      }\n\n      for (let i = 0; i < localStorage.length; i++) {\n        let obj = localStorage.getObj(localStorage.key(i));\n\n        if (isNaN(obj.id) === false) {\n          loadNotes.push({\n           \"id\": obj.id,\n            \"title\": obj.title,\n            \"text\": obj.text,\n            \"left\": obj.left,\n            \"top\": obj.top,\n            \"color\": obj.color,\n            \"time\": obj.time\n          });\n        }\n      }\n\n      for (let i = 0; i < loadNotes.length; i++) {\n        for (let j = loadNotes.length -1; j > i; j--) {\n          if (loadNotes[i].id === loadNotes[j].id) {\n            loadNotes.splice(j, 1);\n          }\n        }\n      }\n\n      return loadNotes;\n    }\n\n    return [];\n  }\n\n  add() {\n    let newNote = {\"id\": this.state.notes.length + 1, \"title\": \"sample titleX\", \"text\": \"sample textX\", \"left\": \"25%\", \"top\": \"25%\", \"color\": \"blue\", \"time\": null};\n    let clonedNotes = this.parseNotes();\n\n    clonedNotes.push(newNote);\n\n    clonedNotes = this.localStorage(clonedNotes);\n\n    this.setState({\n      notes: clonedNotes\n    });\n  }\n\n  call(id, callBack) {\n    this.setState({active: id});\n    callBack();\n  }\n\n  dragOver(e) {\n    e.preventDefault();\n  }\n\n  onDrop(e) {\n    e.preventDefault();\n    let id = parseInt(e.dataTransfer.getData(\"text/plain\"));\n\n    let clonedNotes = this.parseNotes();\n    for (let i = 0; i < clonedNotes.length; i++) {\n      if (clonedNotes[i].id === id) {\n        let top = (e.clientY / window.innerHeight) * 100;\n        let left = (e.clientX / window.innerWidth) * 100;\n        clonedNotes[i].top = top + \"%\";\n        clonedNotes[i].left = left + \"%\";\n      }\n    }\n\n    clonedNotes = this.localStorage(clonedNotes);\n\n    this.setState({\n      notes: clonedNotes\n    });\n\n  }\n\n  order(direction, id) {\n    let notes = this.parseNotes();\n\n    if (direction === 1) {\n      for (let i = notes.length -1; i >= 0; i--) {\n        if (notes[i].id === id) {\n          for (let j = 0; j < notes.length; j++) {\n            if ((notes[j].id - id) === 1) {\n              notes[i].id = notes[j].id;\n              notes[j].id = id;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    } else {\n      for (let i = 0; i < notes.length; i++) {\n        if (notes[i].id === id) {\n          for (let j = 0; j < notes.length; j++) {\n            if ((id - notes[j].id) === 1) {\n              notes[i].id = notes[j].id;\n              notes[j].id = id;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    notes = this.localStorage(notes);\n    this.setState({\n      notes: notes\n    });\n  }\n\n  onSubmit(note) {\n\n    let clonedNotes = this.parseNotes();\n\n    for (let n of clonedNotes) {\n      if (n.id === note.id) {\n        n.text = note.text;\n        n.title = note.title;\n        n.color = note.color;\n      }\n    }\n    clonedNotes = this.localStorage(clonedNotes);\n    this.setState({notes: clonedNotes});\n  }\n\n  delete(id) {\n    let confirmRemove = window.confirm(\"Do you want to remove the note?\");\n    if (confirmRemove) {\n      let clonedNotes = this.parseNotes();\n      for (let i = 0; i < clonedNotes.length; i++) {\n        if (clonedNotes[i].id === id) {\n          clonedNotes.splice(i, 1);\n          localStorage.removeItem(id);\n        }\n      }\n\n      this.setState({\n        notes: clonedNotes\n      });\n    }\n\n  }\n\n  parseNotes() {\n    let notes = [];\n    for (let note of this.state.notes) {\n      notes.push(JSON.parse(JSON.stringify(note)));\n    }\n\n    return notes;\n  }\n\n  render() {\n\n    let notes = this.parseNotes();\n    let renderNotes = [];\n\n    for (let note of notes) {\n      renderNotes.push(<Note order={this.order} delete={this.delete} colors={this.state.colors}\n        id={note.id} title={note.title} call={this.call} onSubmit={this.onSubmit} text={note.text} color={note.color}\n        top={note.top} left={note.left} key={1000 * Math.random()} />);\n    }\n\n    return (\n      <div className=\"Full\" onDrop={e => this.onDrop(e)} onDragOver={e => this.dragOver(e)}>\n      <button className=\"Add\" onClick={this.add}>Add</button>\n      <div id=\"flex\">\n         {renderNotes}\n      </div>\n      </div>);\n  }\n\n}\n\nexport default Notes;\n","import React from 'react';\nimport Notes from './Notes.js';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return <div className=\"App\"><Notes /></div>;\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}